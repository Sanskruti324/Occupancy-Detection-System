/* NOTE: 
1>>The Harrcascade files should be present in the same directory in which the code is saved/present , else there will be error
2>>The following code is for testing the image processing to detect the presence of human beings
3>>The code for integrating  with Rapberry PI is given  in the text file :"code for integrating with RASPBERRY pi.txt"
4>> Proper libraries (OPEN CV,NUMPY ETC) should be installed prior the execution of the code    */

________________________________________________________________________________________________________________________________________


import cv2
import numpy as np


face_cascade=cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
up_cascade=cv2.CascadeClassifier('haarcascade_upperbody.xml')
reye_cascade=cv2.CascadeClassifier('haarcascade_righteye_2splits.xml')
 
 
cap=cv2.VideoCapture(0)
while True:
    ret,img=cap.read()
    
    a=0
    b=0
    c=0

    
    
    gray =cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) 
    
    #body= body_cascade.detectMultiScale(gray,1.3,4)
    face= face_cascade.detectMultiScale(gray,1.3,4)
    up=up_cascade.detectMultiScale(gray,1.3,4)
    right=reye_cascade.detectMultiScale(gray,1.3,4)
    
    
    
    for (x,y,w,h) in face:
        cv2.rectangle(img,(x,y),(x+w,y+h), (0,255,0) ,2)
        print(face)
        print("room occupied||lights on")
        a=1
        
    for (x,y,w,h) in up:
        cv2.rectangle(img,(x,y),(x+w,y+h), (0,0,255) ,2)
        b=1
        print(up)
        print("room occupied||lights on")
    
    for (x,y,w,h) in right:
        cv2.rectangle(img,(x,y),(x+w,y+h), (0,255,255) ,2)
        c=1
        print(right)
        print("room occupied||lights on")
    
    if (a==1)|(b==1)|(c==1):
        cv2.putText(img,"HUMAN PRESENT".format(),(30,40),cv2.FONT_HERSHEY_SIMPLEX,1,(0,0,255),2)
        cv2.putText(img,"LIGHTS ACTIVE".format(),(300,40),cv2.FONT_HERSHEY_SIMPLEX,1,(0,255,255),2)
        
    cv2.imshow('img',img)
    
    
    k=cv2.waitKey(30) & 0xff
    if k==27:
        break
    
    
cap.release()
cv2.destroyAllWindows()